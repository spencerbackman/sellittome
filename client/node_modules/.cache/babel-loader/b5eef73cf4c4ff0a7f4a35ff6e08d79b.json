{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Work/mr-cash/client/src/Offer/Condition.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addCondition, addIndex } from '../redux/Form';\n\nclass Condition extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClean = () => {\n      return this.props.addCondition('clean');\n    };\n\n    this.handleAverage = () => {\n      return this.props.addCondition('average');\n    };\n\n    this.handleRough = () => {\n      return this.props.addCondition('rough');\n    };\n\n    this.handleClick = value => {\n      return this.props.addCondition(value);\n    };\n\n    this.state = {\n      clean: props.form.condition === \"clean\",\n      average: props.form.condition === \"average\",\n      rough: props.form.condition === \"rough\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const form = this.props.form;\n\n    if (prevProps.form.condition !== form.condition && form.condition.length > 0) {\n      setTimeout(function () {\n        var index = this.props.form.index + 1;\n        this.props.addIndex(index);\n      }.bind(this), 500);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout();\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"form-radio-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-radio-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"radio-label\",\n      htmlFor: \"condition\",\n      onClick: () => this.handleClick('clean'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.form.condition === 'clean' ? 'radio-circle radio-circle-active' : 'radio-circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"Clean\")), React.createElement(\"div\", {\n      className: \"form-radio-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"radio-label\",\n      htmlFor: \"condition\",\n      onClick: () => this.handleClick('average'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.form.condition === 'average' ? 'radio-circle radio-circle-active' : 'radio-circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"Average\")), React.createElement(\"div\", {\n      className: \"form-radio-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"radio-label\",\n      htmlFor: \"condition\",\n      onClick: () => this.handleClick('rough'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.form.condition === 'rough' ? 'radio-circle radio-circle-active' : 'radio-circle',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), \"Rough\")));\n  }\n\n}\n\nexport default connect(state => state, {\n  addCondition,\n  addIndex\n})(Condition);","map":{"version":3,"sources":["/Users/spencerbackman/Work/mr-cash/client/src/Offer/Condition.js"],"names":["React","connect","addCondition","addIndex","Condition","Component","constructor","props","handleClean","handleAverage","handleRough","handleClick","value","state","clean","form","condition","average","rough","componentDidUpdate","prevProps","length","setTimeout","index","bind","componentWillUnmount","clearTimeout","render","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addCondition, addIndex } from '../redux/Form';\n\nclass Condition extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clean: props.form.condition === \"clean\",\n            average: props.form.condition === \"average\",\n            rough: props.form.condition === \"rough\"\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const form = this.props.form\n        if((prevProps.form.condition !== form.condition) && form.condition.length > 0) {\n            setTimeout(\n                function() {\n                    var index = (this.props.form.index + 1);\n                    this.props.addIndex(index);\n                }.bind(this), 500\n            )\n        }\n    }\n    componentWillUnmount() {\n        clearTimeout();\n    }\n    handleClean = () => {\n        return this.props.addCondition('clean')\n    }\n    handleAverage = () => {\n        return this.props.addCondition('average')\n    }\n    handleRough = () => {\n        return this.props.addCondition('rough')\n    }\n    handleClick = value => {\n        return this.props.addCondition(value)\n    }\n    render() {\n        console.log(this.state)\n        return (\n            <div className=\"form-radio-column\">\n                <div className=\"form-radio-row\">\n                    <div className=\"radio-label\" htmlFor=\"condition\" onClick={() => this.handleClick('clean')}> \n                        <span className={this.props.form.condition === 'clean' ? 'radio-circle radio-circle-active': 'radio-circle'}></span>\n                        Clean \n                    </div>\n                </div>\n                <div className=\"form-radio-row\">\n                    <label className=\"radio-label\" htmlFor=\"condition\" onClick={() => this.handleClick('average')}> \n                        <span className={this.props.form.condition === 'average' ? 'radio-circle radio-circle-active': 'radio-circle'}></span>\n                        Average \n                    </label>\n                </div>\n                <div className=\"form-radio-row\">\n                    <div className=\"radio-label\" htmlFor=\"condition\" onClick={() => this.handleClick('rough')}> \n                        <span className={this.props.form.condition === 'rough' ? 'radio-circle radio-circle-active': 'radio-circle'}></span>\n                        Rough \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state, { addCondition, addIndex })(Condition);"]},"metadata":{},"sourceType":"module"}
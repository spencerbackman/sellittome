{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Development/mr-cash/client/src/Offer/Model.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addModel, addIndex } from '../redux/Form';\nimport { getModels } from '../redux/BlackValue';\n\nclass Model extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = model => {\n      this.props.addModel(e.target.value);\n      var index = this.props.form.index + 1;\n      this.props.addIndex(index);\n    };\n\n    this.mapModels = () => {\n      if (this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.length > 0))) {\n        return this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.map(make => make.model_list.map(model => React.createElement(\"a\", {\n          href: \"#\",\n          className: \"option\",\n          onClick: () => this.handleClick(model.name),\n          key: model.name,\n          value: model.name,\n          name: \"model\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \" \", model.name, \" \")))));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getModels(this.props.form.year, this.props.form.make);\n  }\n\n  render() {\n    console.log(\"Model: \", this.props);\n    return React.createElement(\"div\", {\n      className: \"option-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.mapModels());\n  }\n\n}\n\nexport default connect(state => state, {\n  addModel,\n  getModels,\n  addIndex\n})(Model);","map":{"version":3,"sources":["/Users/spencerbackman/Development/mr-cash/client/src/Offer/Model.js"],"names":["React","connect","addModel","addIndex","getModels","Model","Component","handleClick","model","props","e","target","value","index","form","mapModels","blackValue","drilldown","class_list","map","list","year_list","year","make_list","length","make","model_list","name","componentDidMount","render","console","log","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,eAAnC;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAIhCC,WAJgC,GAIlBC,KAAK,IAAI;AACnB,WAAKC,KAAL,CAAWP,QAAX,CAAoBQ,CAAC,CAACC,MAAF,CAASC,KAA7B;AACA,UAAIC,KAAK,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBD,KAAhB,GAAwB,CAApC;AACA,WAAKJ,KAAL,CAAWN,QAAX,CAAoBU,KAApB;AACH,KAR+B;;AAAA,SAShCE,SATgC,GASpB,MAAM;AACd,UAAG,KAAKN,KAAL,CAAWO,UAAX,CAAsBC,SAAtB,CAAgCC,UAAhC,CAA2CC,GAA3C,CAA+CC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAmBG,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,MAAf,GAAwB,CAAnD,CAAvD,CAAH,EAAkH;AAC9G,eACI,KAAKf,KAAL,CAAWO,UAAX,CAAsBC,SAAtB,CAAgCC,UAAhC,CAA2CC,GAA3C,CAA+CC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAmBG,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAmBM,IAAI,IAAIA,IAAI,CAACC,UAAL,CAAgBP,GAAhB,CAAoBX,KAAK,IAClI;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,QAAtB;AAA+B,UAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBC,KAAK,CAACmB,IAAvB,CAA9C;AAA4E,UAAA,GAAG,EAAEnB,KAAK,CAACmB,IAAvF;AAA6F,UAAA,KAAK,EAAEnB,KAAK,CAACmB,IAA1G;AAAgH,UAAA,IAAI,EAAC,OAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+HnB,KAAK,CAACmB,IAArI,MADyG,CAA3B,CAA3B,CAAvD,CADJ;AAKH;AACJ,KAjB+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKnB,KAAL,CAAWL,SAAX,CAAqB,KAAKK,KAAL,CAAWK,IAAX,CAAgBQ,IAArC,EAA2C,KAAKb,KAAL,CAAWK,IAAX,CAAgBW,IAA3D;AACH;;AAeDI,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKtB,KAA5B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKM,SAAL,EADL,CADJ;AAKH;;AAzB+B;;AA4BpC,eAAed,OAAO,CAAC+B,KAAK,IAAIA,KAAV,EAAiB;AAAE9B,EAAAA,QAAF;AAAYE,EAAAA,SAAZ;AAAuBD,EAAAA;AAAvB,CAAjB,CAAP,CAA2DE,KAA3D,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addModel, addIndex } from '../redux/Form';\nimport { getModels } from '../redux/BlackValue';\n\nclass Model extends React.Component {\n    componentDidMount() {\n        this.props.getModels(this.props.form.year, this.props.form.make)\n    }\n    handleClick = model => {\n        this.props.addModel(e.target.value);\n        var index = this.props.form.index + 1;\n        this.props.addIndex(index);\n    }\n    mapModels = () => {\n        if(this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.length > 0))) {\n            return (\n                this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.map(make => make.model_list.map(model => (\n                    <a href=\"#\" className=\"option\" onClick={() => this.handleClick(model.name)} key={model.name} value={model.name} name=\"model\"> {model.name} </a>\n                )))))\n            )\n        }\n    }\n    render() {\n        console.log(\"Model: \", this.props)\n        return (\n            <div className=\"option-container\">\n                {this.mapModels()}\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state, { addModel, getModels, addIndex })(Model)"]},"metadata":{},"sourceType":"module"}
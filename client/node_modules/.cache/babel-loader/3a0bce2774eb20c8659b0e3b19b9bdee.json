{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Development/mr-cash/client/src/ValueForm/Makes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addMake, addIndex, showError } from '../redux/Form';\nimport { getMakes } from '../redux/Year';\n\nclass Makes extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = e => {\n      if (e.target.value.length > 0) {\n        this.props.addMake(e.target.value);\n        this.props.getModels(this.props.form.year, e.target.value);\n        var index = this.props.form.index + 1;\n        this.props.addIndex(index);\n      } else {\n        this.props.showError(true);\n      }\n    };\n\n    this.mapMakes = () => {\n      if (this.props.years.result.length > 0) {\n        return this.props.years.result.map(make => React.createElement(\"option\", {\n          className: \"option\",\n          key: make.make,\n          value: make.make,\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \" \", make.make, \" \"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getMakes(this.props.form.year);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"option-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.mapMakes());\n  }\n\n}\n\nexport default connect(state => state, {\n  addMake,\n  getMakes,\n  addIndex,\n  showError\n})(Makes);","map":{"version":3,"sources":["/Users/spencerbackman/Development/mr-cash/client/src/ValueForm/Makes.js"],"names":["React","connect","addMake","addIndex","showError","getMakes","Makes","Component","handleClick","e","target","value","length","props","getModels","form","year","index","mapMakes","years","result","map","make","componentDidMount","render","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,eAA7C;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAIhCC,WAJgC,GAIlBC,CAAC,IAAI;AACf,UAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA3B,EAA8B;AAC1B,aAAKC,KAAL,CAAWX,OAAX,CAAmBO,CAAC,CAACC,MAAF,CAASC,KAA5B;AACA,aAAKE,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,IAArC,EAA2CP,CAAC,CAACC,MAAF,CAASC,KAApD;AACA,YAAIM,KAAK,GAAG,KAAKJ,KAAL,CAAWE,IAAX,CAAgBE,KAAhB,GAAwB,CAApC;AACA,aAAKJ,KAAL,CAAWV,QAAX,CAAoBc,KAApB;AACH,OALD,MAKO;AACH,aAAKJ,KAAL,CAAWT,SAAX,CAAqB,IAArB;AACH;AACJ,KAb+B;;AAAA,SAchCc,QAdgC,GAcrB,MAAM;AACb,UAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBR,MAAxB,GAAiC,CAApC,EAAuC;AACnC,eACI,KAAKC,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,GAAxB,CAA4BC,IAAI,IAC5B;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,GAAG,EAAEA,IAAI,CAACA,IAArC;AAA2C,UAAA,KAAK,EAAEA,IAAI,CAACA,IAAvD;AAA6D,UAAA,OAAO,EAAE,KAAKd,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0Fc,IAAI,CAACA,IAA/F,MADJ,CADJ;AAKH;AACJ,KAtB+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,KAAL,CAAWR,QAAX,CAAoB,KAAKQ,KAAL,CAAWE,IAAX,CAAgBC,IAApC;AACH;;AAoBDQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,QAAL,EADL,CADJ;AAKH;;AA7B+B;;AAgCpC,eAAejB,OAAO,CAACwB,KAAK,IAAIA,KAAV,EAAiB;AAAEvB,EAAAA,OAAF;AAAWG,EAAAA,QAAX;AAAqBF,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAAjB,CAAP,CAAoEE,KAApE,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addMake, addIndex, showError } from '../redux/Form';\nimport { getMakes } from '../redux/Year';\n\nclass Makes extends React.Component {\n    componentDidMount() {\n        this.props.getMakes(this.props.form.year)\n    }\n    handleClick = e => {\n        if(e.target.value.length > 0) {\n            this.props.addMake(e.target.value)\n            this.props.getModels(this.props.form.year, e.target.value)\n            var index = this.props.form.index + 1;\n            this.props.addIndex(index);\n        } else {\n            this.props.showError(true)\n        }\n    }\n    mapMakes = () => {\n        if(this.props.years.result.length > 0) {\n            return (\n                this.props.years.result.map(make => (\n                    <option className=\"option\" key={make.make} value={make.make} onClick={this.handleClick}> {make.make} </option>\n                ))\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"option-container\">\n                {this.mapMakes()}\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state, { addMake, getMakes, addIndex, showError })(Makes);"]},"metadata":{},"sourceType":"module"}
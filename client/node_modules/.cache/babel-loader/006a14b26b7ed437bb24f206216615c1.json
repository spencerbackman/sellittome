{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Development/mr-cash/client/src/EmailForm.js\";\nimport React from 'react';\nimport Dropzone from './Dropzone';\nimport Progress from './Progress';\nimport './assets/scss/form.scss';\n\nclass EmailForm extends React.Component {\n  constructor() {\n    super();\n\n    this.sendEmail = e => {\n      e.preventDefault();\n      const email = {\n        name: this.state.name,\n        replyTo: this.state.from,\n        phone: this.state.phone,\n        description: this.state.description,\n        images: this.state.attachments\n      };\n      console.log(email);\n      fetch(\"/upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: email\n      }).then(response => response.json());\n      this.setState({\n        name: '',\n        from: '',\n        phone: '',\n        description: '',\n        attachments: {}\n      });\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onFilesAdded = files => {\n      this.setState(prevState => ({\n        files: prevState.files.concat(files)\n      }));\n    };\n\n    this.renderProgress = file => {\n      const uploadProgress = this.state.uploadProgress[file.name];\n\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return React.createElement(\"div\", {\n          className: \"ProgressWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      from: '',\n      phone: '',\n      description: '',\n      attachments: {},\n      files: [],\n      uploading: false,\n      uploadProgress: {},\n      successfullUploaded: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"form-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.sendEmail,\n      className: \"email-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"input\",\n      placeholder: \"NAME*\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"from\",\n      className: \"input\",\n      placeholder: \"EMAIL*\",\n      value: this.state.from,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"phone\",\n      className: \"input\",\n      placeholder: \"PHONE\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      className: \"input\",\n      placeholder: \"DESCRIPTION*\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onFilesAdded: this.onFilesAdded,\n      disabled: this.state.uploading || this.state.successfullUploaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.files.map(file => {\n      return React.createElement(\"div\", {\n        key: file.name,\n        className: \"Row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Filename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" \", file.name, \" \"), this.renderProgress(file));\n    })), React.createElement(\"div\", {\n      className: \"Actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", this.renderActions(), \" \"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" GET YOUR OFFER! \")));\n  }\n\n}\n\nexport default EmailForm;","map":{"version":3,"sources":["/Users/spencerbackman/Development/mr-cash/client/src/EmailForm.js"],"names":["React","Dropzone","Progress","EmailForm","Component","constructor","sendEmail","e","preventDefault","email","name","state","replyTo","from","phone","description","images","attachments","console","log","fetch","method","headers","body","then","response","json","setState","handleChange","target","value","onFilesAdded","files","prevState","concat","renderProgress","file","uploadProgress","uploading","successfullUploaded","render","map","renderActions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dropzone from './Dropzone';\nimport Progress from './Progress';\nimport './assets/scss/form.scss';\n\nclass EmailForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            from: '',\n            phone: '',\n            description: '',\n            attachments: {},\n            files: [],\n            uploading: false,\n            uploadProgress: {},\n            successfullUploaded: false\n        }\n    }\n    sendEmail = (e) => {\n        e.preventDefault();\n        const email = {\n            name: this.state.name,\n            replyTo: this.state.from,\n            phone: this.state.phone,\n            description: this.state.description,\n            images: this.state.attachments\n        }\n        console.log(email)\n        fetch(\"/upload\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: email\n        }).then(response => response.json())\n        this.setState({\n            name: '',\n            from: '',\n            phone: '',\n            description: '',\n            attachments: {}\n        })\n    }\n    handleChange = e => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    onFilesAdded = (files) => {\n        this.setState(prevState => ({\n            files: prevState.files.concat(files)\n        }))\n    }\n\n    renderProgress = file => {\n        const uploadProgress = this.state.uploadProgress[file.name];\n        if(this.state.uploading || this.state.successfullUploaded) {\n            return (\n                <div className=\"ProgressWrapper\">\n\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"form-page\">\n                <form onSubmit={this.sendEmail} className=\"email-form\">\n                    <div className=\"form-row\">\n                        <input type=\"text\" name=\"name\" className=\"input\" placeholder=\"NAME*\" value={this.state.name} onChange={this.handleChange} />\n                    </div> \n                    <div className=\"form-row\">\n                        <input type=\"text\" name=\"from\" className=\"input\" placeholder=\"EMAIL*\" value={this.state.from} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        <input type=\"number\" name=\"phone\" className=\"input\" placeholder=\"PHONE\" value={this.state.phone} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        <input type=\"text\" name=\"description\" className=\"input\" placeholder=\"DESCRIPTION*\" value={this.state.description} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row\">\n                        <Dropzone onFilesAdded={this.onFilesAdded} disabled={this.state.uploading || this.state.successfullUploaded} />\n                    </div>\n                    <div className=\"Files\">\n                        {this.state.files.map(file => {\n                            return (\n                                <div key={file.name} className=\"Row\">\n                                    <span className=\"Filename\"> {file.name} </span>\n                                    {this.renderProgress(file)}\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div className=\"Actions\"> {this.renderActions()} </div>\n                    <button> GET YOUR OFFER! </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default EmailForm"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nconst url = \"https://specifications.vinaudit.com/v3/selections?key=9NSOAST0U19Z4HH&list=\";\n\nfunction setVehicle(vehicle) {\n  return {\n    type: \"SET_VEHICLE\",\n    vehicle\n  };\n}\n\nexport function getVehicleYears() {\n  return dispatch => {\n    axios.get(url + \"year&format=json\").then(res => {\n      dispatch({\n        type: 'GET_VEHICLE_YEARS',\n        years: res.data.selections\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function getVehicleMakes(year) {\n  return dispatch => {\n    axios.get(url + \"make&year=\".concat(year, \"&format=json\")).then(res => {\n      dispatch({\n        type: 'GET_VEHICLE_MAKES',\n        makes: res.data.selections\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function getVehicleModels(year, make) {\n  return dispatch => {\n    axios.get(url + \"model&year=\".concat(year, \"&make=\").concat(make, \"&format=json\")).then(res => {\n      dispatch({\n        type: 'GET_VEHICLE_MODELS',\n        models: res.data.selections\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function getVehicleTrims(year, make, model) {\n  return dispatch => {\n    axios.get(url + \"trim&year=\".concat(year, \"&make=\").concat(make, \"&model=\").concat(model, \"&format=json\")).then(res => {\n      dispatch({\n        type: 'GET_VEHICLE_TRIMS',\n        trims: res.data.selections\n      });\n    });\n  };\n}\nexport default function reducer(vehicle = [], action) {\n  switch (action.type) {\n    case \"GET_VEHICLE_YEARS\":\n      return action.years;\n\n    case \"GET_VEHICLE_MAKES\":\n      return action.makes;\n\n    case \"GET_VEHICLE_MODELS\":\n      return action.models;\n\n    case \"GET_VEHICLE_TRIMS\":\n      return actions.models;\n\n    default:\n      return vehicle;\n  }\n}","map":{"version":3,"sources":["/Users/spencerbackman/Development/mr-cash/client/src/redux/getVehicle.js"],"names":["axios","url","setVehicle","vehicle","type","getVehicleYears","dispatch","get","then","res","years","data","selections","catch","err","console","log","getVehicleMakes","year","makes","getVehicleModels","make","models","getVehicleTrims","model","trims","reducer","action","actions"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,6EAAZ;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAE,aADH;AAEHD,IAAAA;AAFG,GAAP;AAIH;;AAED,OAAO,SAASE,eAAT,GAA2B;AAC9B,SAAOC,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAUN,GAAG,GAAG,kBAAhB,EAAoCO,IAApC,CAAyCC,GAAG,IAAI;AAC5CH,MAAAA,QAAQ,CAAC;AACLF,QAAAA,IAAI,EAAE,mBADD;AAELM,QAAAA,KAAK,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFX,OAAD,CAAR;AAIH,KALD,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH,GATD;AAUH;AAED,OAAO,SAASG,eAAT,CAAyBC,IAAzB,EAA+B;AAClC,SAAOZ,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAUN,GAAG,uBAAgBiB,IAAhB,iBAAb,EAAiDV,IAAjD,CAAsDC,GAAG,IAAI;AACzDH,MAAAA,QAAQ,CAAC;AACLF,QAAAA,IAAI,EAAE,mBADD;AAELe,QAAAA,KAAK,EAAEV,GAAG,CAACE,IAAJ,CAASC;AAFX,OAAD,CAAR;AAIH,KALD,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH,GATD;AAUH;AAED,OAAO,SAASM,gBAAT,CAA0BF,IAA1B,EAAgCG,IAAhC,EAAsC;AACzC,SAAOf,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAUN,GAAG,wBAAiBiB,IAAjB,mBAA8BG,IAA9B,iBAAb,EAA+Db,IAA/D,CAAoEC,GAAG,IAAI;AACvEH,MAAAA,QAAQ,CAAC;AACLF,QAAAA,IAAI,EAAE,oBADD;AAELkB,QAAAA,MAAM,EAAEb,GAAG,CAACE,IAAJ,CAASC;AAFZ,OAAD,CAAR;AAIH,KALD,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;AAQH,GATD;AAUH;AAED,OAAO,SAASS,eAAT,CAAyBL,IAAzB,EAA+BG,IAA/B,EAAqCG,KAArC,EAA4C;AAC/C,SAAOlB,QAAQ,IAAI;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAUN,GAAG,uBAAgBiB,IAAhB,mBAA6BG,IAA7B,oBAA2CG,KAA3C,iBAAb,EAA6EhB,IAA7E,CAAkFC,GAAG,IAAI;AACrFH,MAAAA,QAAQ,CAAC;AACLF,QAAAA,IAAI,EAAE,mBADD;AAELqB,QAAAA,KAAK,EAAEhB,GAAG,CAACE,IAAJ,CAASC;AAFX,OAAD,CAAR;AAIH,KALD;AAMH,GAPD;AAQH;AAED,eAAe,SAASc,OAAT,CAAiBvB,OAAO,GAAG,EAA3B,EAA+BwB,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACvB,IAAd;AACI,SAAK,mBAAL;AACI,aAAOuB,MAAM,CAACjB,KAAd;;AACJ,SAAK,mBAAL;AACI,aAAOiB,MAAM,CAACR,KAAd;;AACJ,SAAK,oBAAL;AACI,aAAOQ,MAAM,CAACL,MAAd;;AACJ,SAAK,mBAAL;AACI,aAAOM,OAAO,CAACN,MAAf;;AACJ;AACI,aAAOnB,OAAP;AAVR;AAYH","sourcesContent":["import axios from 'axios';\n\nconst url = \"https://specifications.vinaudit.com/v3/selections?key=9NSOAST0U19Z4HH&list=\";\n\nfunction setVehicle(vehicle) {\n    return {\n        type: \"SET_VEHICLE\",\n        vehicle\n    }\n}\n\nexport function getVehicleYears() {\n    return dispatch => {\n        axios.get(url + \"year&format=json\").then(res => {\n            dispatch({\n                type: 'GET_VEHICLE_YEARS',\n                years: res.data.selections\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport function getVehicleMakes(year) {\n    return dispatch => {\n        axios.get(url + `make&year=${year}&format=json`).then(res => {\n            dispatch({\n                type: 'GET_VEHICLE_MAKES',\n                makes: res.data.selections\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport function getVehicleModels(year, make) {\n    return dispatch => {\n        axios.get(url + `model&year=${year}&make=${make}&format=json`).then(res => {\n            dispatch({\n                type: 'GET_VEHICLE_MODELS',\n                models: res.data.selections\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport function getVehicleTrims(year, make, model) {\n    return dispatch => {\n        axios.get(url + `trim&year=${year}&make=${make}&model=${model}&format=json`).then(res => {\n            dispatch({\n                type: 'GET_VEHICLE_TRIMS',\n                trims: res.data.selections\n            })\n        })\n    }\n}\n\nexport default function reducer(vehicle = [], action) {\n    switch(action.type) {\n        case \"GET_VEHICLE_YEARS\":\n            return action.years\n        case \"GET_VEHICLE_MAKES\":\n            return action.makes\n        case \"GET_VEHICLE_MODELS\":\n            return action.models\n        case \"GET_VEHICLE_TRIMS\":\n            return actions.models\n        default: \n            return vehicle\n    }\n}"]},"metadata":{},"sourceType":"module"}
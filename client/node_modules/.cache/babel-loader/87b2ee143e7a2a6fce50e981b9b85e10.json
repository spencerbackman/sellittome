{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Development/mr-cash/client/src/ValueForm/Bodies.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addStyle, addVehicleId, addIndex, showError } from '../redux/Form';\nimport { getBodies } from '../redux/Year';\n\nclass Bodies extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = (id, body) => {\n      if (id.length > 0 && body.length > 0) {\n        this.props.addVehicleId(id);\n        this.props.addStyle(body);\n        var index = this.props.form.index + 1;\n        this.props.addIndex(index);\n      } else {\n        this.props.showError();\n      }\n    };\n\n    this.mapBodies = () => {\n      if (this.props.years.result.length > 0) {\n        console.log('padkfjweqpir');\n        this.props.years.result.map((body, index) => React.createElement(\"option\", {\n          className: \"option\",\n          name: body.body,\n          key: index,\n          value: body.ucgvehicleid,\n          onClick: () => this.handleClick(body.ucgvehicleid, body.body),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \" \", body.body, \" \"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getBodies(this.props.form.year, this.props.form.make, this.props.form.model);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"option-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.mapBodies());\n  }\n\n}\n\nexport default connect(state => state, {\n  addStyle,\n  addVehicleId,\n  addIndex,\n  getBodies,\n  showError\n})(Bodies);","map":{"version":3,"sources":["/Users/spencerbackman/Development/mr-cash/client/src/ValueForm/Bodies.js"],"names":["React","connect","addStyle","addVehicleId","addIndex","showError","getBodies","Bodies","Component","handleClick","id","body","length","props","index","form","mapBodies","years","result","console","log","map","ucgvehicleid","componentDidMount","year","make","model","render","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,QAAjC,EAA2CC,SAA3C,QAA4D,eAA5D;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAIjCC,WAJiC,GAInB,CAACC,EAAD,EAAKC,IAAL,KAAc;AACxB,UAAGD,EAAE,CAACE,MAAH,GAAY,CAAZ,IAAiBD,IAAI,CAACC,MAAL,GAAc,CAAlC,EAAqC;AACjC,aAAKC,KAAL,CAAWV,YAAX,CAAwBO,EAAxB;AACA,aAAKG,KAAL,CAAWX,QAAX,CAAoBS,IAApB;AACA,YAAIG,KAAK,GAAG,KAAKD,KAAL,CAAWE,IAAX,CAAgBD,KAAhB,GAAwB,CAApC;AACA,aAAKD,KAAL,CAAWT,QAAX,CAAoBU,KAApB;AACH,OALD,MAKO;AACH,aAAKD,KAAL,CAAWR,SAAX;AACH;AACJ,KAbgC;;AAAA,SAcjCW,SAdiC,GAcrB,MAAM;AACd,UAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBN,MAAxB,GAAiC,CAApC,EAAuC;AACnCO,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAKP,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBG,GAAxB,CAA4B,CAACV,IAAD,EAAOG,KAAP,KACxB;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,IAAI,EAAEH,IAAI,CAACA,IAAtC;AAA4C,UAAA,GAAG,EAAEG,KAAjD;AAAwD,UAAA,KAAK,EAAEH,IAAI,CAACW,YAApE;AAAkF,UAAA,OAAO,EAAE,MAAM,KAAKb,WAAL,CAAiBE,IAAI,CAACW,YAAtB,EAAoCX,IAAI,CAACA,IAAzC,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmJA,IAAI,CAACA,IAAxJ,MADJ;AAGH;AACJ,KArBgC;AAAA;;AACjCY,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,KAAL,CAAWP,SAAX,CAAqB,KAAKO,KAAL,CAAWE,IAAX,CAAgBS,IAArC,EAA2C,KAAKX,KAAL,CAAWE,IAAX,CAAgBU,IAA3D,EAAiE,KAAKZ,KAAL,CAAWE,IAAX,CAAgBW,KAAjF;AACH;;AAmBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,SAAL,EADL,CADJ;AAKH;;AA5BgC;;AA+BrC,eAAef,OAAO,CAAC2B,KAAK,IAAIA,KAAV,EAAiB;AAAE1B,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,QAA1B;AAAoCE,EAAAA,SAApC;AAA+CD,EAAAA;AAA/C,CAAjB,CAAP,CAAoFE,MAApF,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addStyle, addVehicleId, addIndex, showError } from '../redux/Form';\nimport { getBodies } from '../redux/Year';\n\nclass Bodies extends React.Component {\n    componentDidMount() {\n        this.props.getBodies(this.props.form.year, this.props.form.make, this.props.form.model)\n    }\n    handleClick = (id, body) => {\n        if(id.length > 0 && body.length > 0) {\n            this.props.addVehicleId(id)\n            this.props.addStyle(body)\n            var index = this.props.form.index + 1;\n            this.props.addIndex(index);\n        } else {\n            this.props.showError()\n        }\n    }\n    mapBodies = () => {\n        if(this.props.years.result.length > 0) {\n            console.log('padkfjweqpir')\n            this.props.years.result.map((body, index) => (\n                <option className=\"option\" name={body.body} key={index} value={body.ucgvehicleid} onClick={() => this.handleClick(body.ucgvehicleid, body.body)}> {body.body} </option>\n            ))\n        }\n    }\n    render() {\n        return (\n            <div className=\"option-container\">\n                {this.mapBodies()}\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state, { addStyle, addVehicleId, addIndex, getBodies, showError })(Bodies)"]},"metadata":{},"sourceType":"module"}
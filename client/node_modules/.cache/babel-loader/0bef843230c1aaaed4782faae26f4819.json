{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Work/mr-cash/client/src/Offer/Model.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addModel, addIndex } from '../redux/Form';\nimport { getModels } from '../redux/BlackValue';\n\nclass Model extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = model => {\n      this.setState({\n        model: model\n      });\n      setTimeout(function () {\n        this.props.addModel(model);\n        var index = this.props.form.index + 1;\n        this.props.addIndex(index);\n      }.bind(this), 500);\n    };\n\n    this.mapModels = () => {\n      if (this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.length > 0))) {\n        return this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.map(make => make.model_list.map(model => React.createElement(\"button\", {\n          className: \"option\",\n          onClick: () => this.handleClick(model.name),\n          key: model.name,\n          value: model.name,\n          name: \"model\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \" \", model.name, \" \", React.createElement(\"span\", {\n          className: this.state.model === model.name ? \"option-selected\" : \"not-selected\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"\\u2713\"), \" \")))));\n      }\n    };\n\n    this.state = {\n      model: '',\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      await this.props.getModels(this.props.form.year, this.props.form.make);\n      return this.setState({\n        isLoaded: true\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"option-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.isLoaded ? this.mapModels() : null);\n  }\n\n}\n\nexport default connect(state => state, {\n  addModel,\n  getModels,\n  addIndex\n})(Model);","map":{"version":3,"sources":["/Users/spencerbackman/Work/mr-cash/client/src/Offer/Model.js"],"names":["React","connect","addModel","addIndex","getModels","Model","Component","constructor","handleClick","model","setState","setTimeout","props","index","form","bind","mapModels","blackValue","drilldown","class_list","map","list","year_list","year","make_list","length","make","model_list","name","state","isLoaded","componentDidMount","err","console","log","componentWillUnmount","clearTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,eAAnC;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAqBdC,WArBc,GAqBAC,KAAK,IAAI;AACnB,WAAKC,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACAE,MAAAA,UAAU,CACN,YAAW;AACP,aAAKC,KAAL,CAAWV,QAAX,CAAoBO,KAApB;AACA,YAAII,KAAK,GAAG,KAAKD,KAAL,CAAWE,IAAX,CAAgBD,KAAhB,GAAwB,CAApC;AACA,aAAKD,KAAL,CAAWT,QAAX,CAAoBU,KAApB;AACH,OAJD,CAIEE,IAJF,CAIO,IAJP,CADM,EAKQ,GALR,CAAV;AAOH,KA9Ba;;AAAA,SA+BdC,SA/Bc,GA+BF,MAAM;AACd,UAAG,KAAKJ,KAAL,CAAWK,UAAX,CAAsBC,SAAtB,CAAgCC,UAAhC,CAA2CC,GAA3C,CAA+CC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAmBG,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,MAAf,GAAwB,CAAnD,CAAvD,CAAH,EAAkH;AAC9G,eACI,KAAKb,KAAL,CAAWK,UAAX,CAAsBC,SAAtB,CAAgCC,UAAhC,CAA2CC,GAA3C,CAA+CC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAmBG,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAmBM,IAAI,IAAIA,IAAI,CAACC,UAAL,CAAgBP,GAAhB,CAAoBX,KAAK,IAClI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBC,KAAK,CAACmB,IAAvB,CAA1C;AAAwE,UAAA,GAAG,EAAEnB,KAAK,CAACmB,IAAnF;AAAyF,UAAA,KAAK,EAAEnB,KAAK,CAACmB,IAAtG;AAA4G,UAAA,IAAI,EAAC,OAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA2HnB,KAAK,CAACmB,IAAjI,OAAuI;AAAM,UAAA,SAAS,EAAG,KAAKC,KAAL,CAAWpB,KAAX,KAAqBA,KAAK,CAACmB,IAA5B,GAAoC,iBAApC,GAAwD,cAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvI,MADyG,CAA3B,CAA3B,CAAvD,CADJ;AAKH;AACJ,KAvCa;;AAEV,SAAKC,KAAL,GAAa;AACTpB,MAAAA,KAAK,EAAE,EADE;AAETqB,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AACD,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAM,KAAKnB,KAAL,CAAWR,SAAX,CAAqB,KAAKQ,KAAL,CAAWE,IAAX,CAAgBS,IAArC,EAA2C,KAAKX,KAAL,CAAWE,IAAX,CAAgBY,IAA3D,CAAN;AACA,aAAO,KAAKhB,QAAL,CAAc;AACjBoB,QAAAA,QAAQ,EAAE;AADO,OAAd,CAAP;AAGH,KALD,CAMA,OAAME,GAAN,EAAW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AACDG,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,YAAY;AACf;;AAoBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWC,QAAX,GACC,KAAKd,SAAL,EADD,GAEC,IAHN,CADJ;AAOH;;AAjD+B;;AAoDpC,eAAef,OAAO,CAAC4B,KAAK,IAAIA,KAAV,EAAiB;AAAE3B,EAAAA,QAAF;AAAYE,EAAAA,SAAZ;AAAuBD,EAAAA;AAAvB,CAAjB,CAAP,CAA2DE,KAA3D,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addModel, addIndex } from '../redux/Form';\nimport { getModels } from '../redux/BlackValue';\n\nclass Model extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            model: '',\n            isLoaded: false\n        }\n    }\n    async componentDidMount() {\n        try {\n            await this.props.getModels(this.props.form.year, this.props.form.make);\n            return this.setState({\n                isLoaded: true\n            })\n        }\n        catch(err) {\n            console.log(err)\n        }\n    }\n    componentWillUnmount() {\n        clearTimeout();\n    }\n    handleClick = model => {\n        this.setState({ model: model })\n        setTimeout(\n            function() {\n                this.props.addModel(model);\n                var index = this.props.form.index + 1;\n                this.props.addIndex(index);\n            }.bind(this), 500\n        )\n    }\n    mapModels = () => {\n        if(this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.length > 0))) {\n            return (\n                this.props.blackValue.drilldown.class_list.map(list => list.year_list.map(year => year.make_list.map(make => make.model_list.map(model => (\n                    <button className=\"option\" onClick={() => this.handleClick(model.name)} key={model.name} value={model.name} name=\"model\"> {model.name} <span className={(this.state.model === model.name) ? \"option-selected\" : \"not-selected\"}>&#10003;</span> </button>\n                )))))\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"option-container\">\n                {this.state.isLoaded\n                ? this.mapModels()\n                : null}\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state, { addModel, getModels, addIndex })(Model)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbackman/Development/mr-cash/client/src/Forms/CarForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getVehicleYears } from '../redux/getYears';\nimport { getVehicleMakes } from '../redux/getMakes';\nimport { getVehicleModels } from '../redux/getModels';\nimport { getVehicleTrims } from '../redux/getTrims';\nimport '../assets/scss/carForm.scss';\n\nclass CarForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleYearChange = e => {\n      e.persist();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n      this.props.getVehicleMakes(value);\n    };\n\n    this.handleMakeChange = e => {\n      e.persist();\n      const _e$target2 = e.target,\n            name = _e$target2.name,\n            value = _e$target2.value;\n      this.setState({\n        [name]: value\n      });\n      this.props.getVehicleModels(this.state.year, value);\n    };\n\n    this.handleModelChange = e => {\n      e.persist();\n      const _e$target3 = e.target,\n            name = _e$target3.name,\n            value = _e$target3.value;\n      this.setState({\n        [name]: value\n      });\n      this.props.getVehicleTrims(value);\n    };\n\n    this.handleTrimChange = e => {\n      e.persist();\n      const _e$target4 = e.target,\n            name = _e$target4.name,\n            value = _e$target4.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChange = e => {};\n\n    this.getYear = () => {\n      if (this.props.years.years && this.state.year === '') {\n        return this.props.years.years.map(year => React.createElement(\"option\", {\n          key: year.id,\n          name: year.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \" \", year.name, \" \"));\n      }\n    };\n\n    this.state = {\n      year: '',\n      make: '',\n      model: '',\n      trim: '',\n      miles: '',\n      gotYear: false,\n      gotMake: false,\n      gotModel: false,\n      gotTrim: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getVehicleYears();\n  }\n\n  componentDidUpdate() {\n    if (this.props.years.years && !this.state.gotYear) {\n      this.setState({\n        gotYear: true\n      });\n    }\n\n    if (this.props.makes.makes && !this.state.gotMake) {\n      this.setState({\n        gotMake: true\n      });\n    }\n\n    if (this.props.models.years && !this.state.gotModel) {\n      this.setState({\n        gotModel: true\n      });\n    }\n\n    if (this.props.trims.years && !this.state.gotTrim) {\n      this.setState({\n        gotTrim: true\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleYearChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      name: \"Select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Select Year \"), this.state.gotYear ? this.props.years.years.map(year => React.createElement(\"option\", {\n      key: year.id,\n      name: year.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" \", year.name, \" \")) : null)), React.createElement(\"div\", {\n      className: \"form-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"make\",\n      value: this.state.make,\n      onChange: this.handleMakeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      name: \"Select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" Select Make \"), this.state.gotMake ? this.props.makes.makes.map(make => React.createElement(\"option\", {\n      key: make.id,\n      name: make.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", make.name, \" \")) : null)), React.createElement(\"div\", {\n      className: \"form-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"model\",\n      value: this.state.model,\n      onChange: this.handleModelChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      name: \"Select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" Select Model \"), this.state.gotModel ? this.props.models.years.map(year => year.makes.map(make => make.models.map(model => React.createElement(\"option\", {\n      key: model.id,\n      name: model.id,\n      value: model.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \", model.name, \" \")))) : null)), React.createElement(\"div\", {\n      className: \"form-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"trim\",\n      value: this.state.trim,\n      onChange: this.handleTrimChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      name: \"Select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" Select Trim \"), this.state.gotTrim ? this.props.trims.years.map(year => year.makes.map(make => make.models.map(model => model.trims.map(trim => React.createElement(\"option\", {\n      key: trim.id,\n      name: trim.id,\n      value: trim.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" \", trim.name, \" \"))))) : null)), React.createElement(\"div\", {\n      className: \"form-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"miles\",\n      className: \"car-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Miles \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.props.handleChange,\n      value: this.state.miles,\n      name: \"miles\",\n      placeholder: \"Must be a number\",\n      className: \"car-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(state => state, {\n  getVehicleYears,\n  getVehicleMakes,\n  getVehicleModels,\n  getVehicleTrims\n})(CarForm);","map":{"version":3,"sources":["/Users/spencerbackman/Development/mr-cash/client/src/Forms/CarForm.js"],"names":["React","connect","getVehicleYears","getVehicleMakes","getVehicleModels","getVehicleTrims","CarForm","Component","constructor","props","handleYearChange","e","persist","target","name","value","setState","handleMakeChange","state","year","handleModelChange","handleTrimChange","handleChange","getYear","years","map","id","make","model","trim","miles","gotYear","gotMake","gotModel","gotTrim","componentDidMount","componentDidUpdate","makes","models","trims","render","console","log","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { getVehicleYears } from '../redux/getYears'\nimport { getVehicleMakes } from '../redux/getMakes';\nimport { getVehicleModels } from '../redux/getModels'\nimport { getVehicleTrims } from '../redux/getTrims'\nimport '../assets/scss/carForm.scss';\n\nclass CarForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            year: '',\n            make: '',\n            model: '',\n            trim: '',\n            miles: '',\n            gotYear: false,\n            gotMake: false,\n            gotModel: false,\n            gotTrim: false\n        }\n    }\n    componentDidMount() {\n        this.props.getVehicleYears();\n    }\n    componentDidUpdate() {\n        if(this.props.years.years && !this.state.gotYear) {\n            this.setState({ gotYear: true })\n        }\n        if(this.props.makes.makes && !this.state.gotMake) {\n            this.setState({ gotMake: true })\n        }\n        if(this.props.models.years && !this.state.gotModel) {\n            this.setState({ gotModel: true })\n        }\n        if(this.props.trims.years && !this.state.gotTrim) {\n            this.setState({ gotTrim: true })\n        }\n    }\n    handleYearChange = e => {\n        e.persist();\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n        this.props.getVehicleMakes(value)\n    }\n    handleMakeChange = e => {\n        e.persist();\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n        this.props.getVehicleModels(this.state.year, value);\n    }\n    handleModelChange = e => {\n        e.persist()\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n        this.props.getVehicleTrims(value);\n    }\n    handleTrimChange = e => {\n        e.persist()\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    handleChange = e => {\n        \n    }\n    getYear = () => {\n        if(this.props.years.years && this.state.year === '') {\n            return (\n                this.props.years.years.map(year => (\n                    <option key={year.id} name={year.name}> {year.name} </option>\n                ))\n            )\n        }\n    }\n    render() {\n        console.log(this.state)\n        return (\n            <div>\n                <form onSubmit={this.props.handleSubmit}>\n                    <div>\n                        <div className=\"form-column\">\n                            <select name=\"year\" value={this.state.year} onChange={this.handleYearChange}>\n                                <option name=\"Select\"> Select Year </option>\n                                {this.state.gotYear \n                                ? this.props.years.years.map(year => (\n                                    <option key={year.id} name={year.name}> {year.name} </option>\n                                ))\n                                : null}\n                            </select>\n                        </div>\n                        <div className=\"form-column\">\n                            <select name=\"make\" value={this.state.make} onChange={this.handleMakeChange}>\n                                <option name=\"Select\"> Select Make </option>\n                                {this.state.gotMake\n                                ?  this.props.makes.makes.map(make => (\n                                    <option key={make.id} name={make.name}> {make.name} </option>\n                                ))\n                                : null}\n                            </select>\n                        </div>\n                        <div className=\"form-column\">\n                            <select name=\"model\" value={this.state.model} onChange={this.handleModelChange}>\n                                <option name=\"Select\"> Select Model </option>\n                                {this.state.gotModel \n                                ? this.props.models.years.map(year => year.makes.map(make => make.models.map(model => (\n                                    <option key={model.id} name={model.id} value={model.id}> {model.name} </option>\n                                ))))\n                                : null}\n                            </select>\n                        </div>\n                        <div className=\"form-column\">\n                            <select name=\"trim\" value={this.state.trim} onChange={this.handleTrimChange}>\n                                <option name=\"Select\"> Select Trim </option>\n                                {this.state.gotTrim\n                                ? this.props.trims.years.map(year => year.makes.map(make => make.models.map(model => model.trims.map(trim => (\n                                    <option key={trim.id} name={trim.id} value={trim.id}> {trim.name} </option>\n                                )))))\n                                : null}\n                            </select>\n                        </div>\n                        <div className=\"form-column\">\n                            <label htmlFor=\"miles\" className=\"car-label\"> Miles </label>\n                            <input \n                                type=\"text\"\n                                onChange={this.props.handleChange}\n                                value={this.state.miles}\n                                name=\"miles\"\n                                placeholder=\"Must be a number\"\n                                className=\"car-input\"/>\n                        </div>\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(state => state, { getVehicleYears, getVehicleMakes, getVehicleModels, getVehicleTrims })(CarForm)\n"]},"metadata":{},"sourceType":"module"}